groups:
- name: kubo-etcd
  jobs:
  - run-unit-tests
  - setup-eats-infrastructure
  - eats
  - eats-turbulence
  - teardown-eats-infrastructure
  - upload-etcd-release

resource_types:
- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: kubo-etcd-version
  type: semver
  source:
    driver: gcs
    key: kubo-etcd-version
    json_key: ((gcs-json-key))
    bucket: kubo-pipeline-store
    initial_version: 9.0.0

- name: git-kubo-ci
  type: git
  source:
    uri: https://github.com/pivotal-cf-experimental/kubo-ci
    branch: master

- name: git-kubo-etcd
  type: git
  source:
    uri: https://github.com/cloudfoundry-incubator/cfcr-etcd-release.git
    branch: master

- name: kubo-lock
  type: pool
  source:
    uri: git@github.com:pivotal-cf-experimental/kubo-locks.git
    branch: master
    private_key: ((git-ssh-key.private_key))
    pool: kubo-gcp

- name: gcs-kubo-deployment-pre
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-public
    versioned_file: kubo-deployment-latest.tgz

- name: gcs-bosh-creds
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-pipeline-store
    versioned_file: bosh/creds.yml

- name: gcs-bosh-state
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-pipeline-store
    versioned_file: bosh/state.json

- name: gcp-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-trusty-go_agent

- name: turbulence-release
  type: bosh-io-release
  source:
    repository: cppforlife/turbulence-release

- name: consul-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/consul-release

- name: latest-etcd-release
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-public
    versioned_file: latest-kubo-etcd.tgz

- name: gh-release-kubo-etcd
  type: github-release
  source:
    owner: pivotal-cf-experimental
    repository: kubo-etcd
    access_token: ((github-token-key))
    drafts: true

jobs:
- name: run-unit-tests
  public: true
  plan:
  - aggregate:
    - get: git-kubo-etcd
      trigger: true
    - get: git-kubo-ci
  - aggregate:
    - task: test-etcd-proxy
      file: git-kubo-ci/scripts/etcd/run-unit-test-suite/task.yml
      input_mapping:
        ci: git-kubo-ci
        etcd-release: git-kubo-etcd
      params:
        TEST_SUITE: etcd-proxy
    - task: test-etcd-consistency-checker
      file: git-kubo-ci/scripts/etcd/run-unit-test-suite/task.yml
      input_mapping:
        ci: git-kubo-ci
        etcd-release: git-kubo-etcd
      params:
        TEST_SUITE: etcd-consistency-checker
    - task: test-etcdfab
      file: git-kubo-ci/scripts/etcd/run-unit-test-suite/task.yml
      input_mapping:
        ci: git-kubo-ci
        etcd-release: git-kubo-etcd
      params:
        TEST_SUITE: etcdfab
    - task: test-etcd-metrics-server
      file: git-kubo-ci/scripts/etcd/test-etcd-metrics-server/task.yml
      input_mapping:
        ci: git-kubo-ci
        etcd-release: git-kubo-etcd

- name: setup-eats-infrastructure
  public: true
  plan:
  - aggregate:
    - get: git-kubo-etcd
      trigger: true
      passed: [ run-unit-tests ]
    - get: git-kubo-ci
    - get: gcs-kubo-deployment-pre
  - put: kubo-lock
    params: { acquire: true }
  - task: unpack-kubo-deployment
    file: git-kubo-ci/tasks/unpack-kubo-deployment.yml
  - task: install
    file: git-kubo-ci/tasks/etcd/setup-eats-infrastructure.yml
  - aggregate:
    - put: gcs-bosh-creds
      params:
        file: bosh-creds/creds.yml
    - put: gcs-bosh-state
      params:
        file: bosh-state/state.json

- name: eats
  public: true
  plan:
  - aggregate:
    - get: gcs-bosh-state
      passed:
      - setup-eats-infrastructure
    - get: gcs-bosh-creds
      passed:
      - setup-eats-infrastructure
    - get: kubo-lock
      trigger: true
      passed:
      - setup-eats-infrastructure
    - get: etcd-release
      resource: git-kubo-etcd
      passed:
      - setup-eats-infrastructure
    - get: stemcell
      resource: gcp-stemcell
    - get: turbulence-release
    - get: consul-release
    - get: latest-etcd-release
    - get: git-kubo-ci
  - task: run-eats
    file: git-kubo-ci/tasks/etcd/run-eats.yml
    input_mapping:
      ci: git-kubo-ci
    params:
      TEST_enable_turbulence_tests: false
      TEST_parallel_nodes: 5

- name: eats-turbulence
  public: true
  plan:
  - aggregate:
    - get: gcs-bosh-state
      passed:
      - eats
    - get: gcs-bosh-creds
      passed:
      - eats
    - get: kubo-lock
      trigger: true
      passed:
      - eats
    - get: etcd-release
      resource: git-kubo-etcd
      passed:
      - eats
    - get: stemcell
      resource: gcp-stemcell
    - get: turbulence-release
    - get: consul-release
    - get: latest-etcd-release
    - get: git-kubo-ci
  - task: run-eats
    file: git-kubo-ci/tasks/etcd/run-eats.yml
    input_mapping:
      ci: git-kubo-ci
    params:
      TEST_enable_turbulence_tests: true
      TEST_parallel_nodes: 3

- name: teardown-eats-infrastructure
  plan:
  - aggregate:
    - get: git-kubo-ci
    - get: kubo-lock
      version: every
      trigger: true
      passed: [ 'eats-turbulence' ]
    - get: gcs-kubo-deployment-pre
    - get: gcs-bosh-state
      passed: [ 'eats-turbulence' ]
    - get: gcs-bosh-creds
      passed: [ 'eats-turbulence' ]
  - task: unpack-kubo-deployment
    file: git-kubo-ci/tasks/unpack-kubo-deployment.yml
  - task: destroy
    file: git-kubo-ci/tasks/destroy-bosh.yml
  - put: kubo-lock
    params: { release: kubo-lock }


- name: upload-etcd-release
  plan:
  - aggregate:
    - get: git-kubo-etcd
      passed: [ 'eats-turbulence' ]
    - get: git-kubo-ci
    - get: kubo-etcd-version
  - task: upload-releases
    file: git-kubo-ci/tasks/upload-kubo-etcd-release.yml
    params:
      ACCESS_KEY_ID: ((gcs-access-key-id))
      SECRET_ACCESS_KEY: ((gcs-secret-access-key))
  - aggregate:
    - do:
      - put: git-kubo-etcd
        params:
          repository: git-kubo-etcd-output
      # We need to push the tags separately due to
      # https://github.com/concourse/git-resource/issues/110
      - put: git-kubo-etcd
        params:
          repository: git-kubo-etcd-output
          only_tag: true
      - put: gh-release-kubo-etcd
        params:
          name: kubo-etcd/name
          tag: kubo-etcd-version/version
          tag_prefix: v
          body: kubo-etcd/body
          globs: ["kubo-etcd/*.tgz"]
  - put: kubo-etcd-version
    params:
      bump: major
